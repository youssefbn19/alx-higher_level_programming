>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul(23, [34, 54])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul([34, 53], 34)
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix_mul([34, 53], [34, 42])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([[34, 53]], [34, 42])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> matrix_mul([], [[34, 42]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[]], [[34, 42]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[45, 32], [4, 23]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix_mul([[45, 32], [4, 23]], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix_mul([[45, 32], [4, 23, "alx"]], [[34, 21]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[45, 32], [4, 23]], [[34, 21, True]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[45, 32], [4, 23, 4]], [[34, 21]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[45, 32, 5], [4, 23, 4]], [[34, 21, 43]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[45, 32, 5]], [[34, 21, 43], [3, 4]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 2]], [[1, 2], [3, 4]])
[[7, 10]]

>>> matrix_mul([[9, 6, 3]], [[1, 2], [3, 4], [4, 5]])
[[39, 57]]

>>> matrix_mul([[9, 6, 3], [2, 1, 4]], [[1, 2], [3, 4], [4, 5]])
[[39, 57], [21, 28]]
